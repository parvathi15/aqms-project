<!DOCTYPE html>
<html lang="en">

<head>
  
  <meta charset="UTF-8">
  <link href="styles.css" rel="stylesheet">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css">
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-EVSTQN3/azprG1Anm3QDgpJLIm9Nao0Yz1ztcQTwFspd3yD65VohhpuuCOmLASjC" crossorigin="anonymous">
  <title>User Management System</title>
</head>

<body>

  <div class="purple-overlay1">
    <div class="quote container centered">
        <h4>User Management System</h4>
    </div>
  </div>

  <div class="container mt-1">
    <form method="POST" action="#" class="mt-1">
     <div class="row mt-3">
     <div class="col-md-10 mt-3">
      <input class="form-control " name="search" id = "searchInput" type="text" style="height:60px;" placeholder="Search for User"><i class="fa fa-search form-control-feedback" style="position: absolute;
 position: absolute;
 top: 27%;
right: 25%;
transform: translateY(-50%);
font-size: 22px;
color: #ccc;"></i>
 </div>

</div></form>

  <div class="container mt-5">
    <div class="row">
      <div id="no-more-tables">
        <table class="table">
          <thead class="cf">
            <tr>
              <th style="text-align-last:left;">#</th>
              <th style="text-align-last:center;">Username</th>
              <th style="text-align-last: center;">Email</th>
              <th style="text-align-last: center;">Actions</th>
            </tr>
          </thead>
          <tbody>
          </tbody>
        </table>
      </div>
    </div>
  </div>

  <div class="overlay" id="editOverlay">
    <div class="popup" id="editPopup">
     
      <label for="newEmail">Email:</label>
      <div class="form-group">
       <input type="text"  class="form-control" id="newEmail" required>
       </div>
 
     <label for="newUsername">Username:</label>
     <div class="form-group">
       <input type="text"  class="form-control" id="newUsername" required>
     </div>
 
     <label for="newPassword">Password:</label>
     <div class="form-group">
       <input type="password"  class="form-control" id="newPassword" required>
     </div>
     <button onclick="saveEdit()" class = "btn btn-save mt-4 mb-2">Save</button>
     <button onclick="cancelEdit()" class = "btn btn-danger mt-4 mb-2">Cancel</button>
    </div>
  </div>

 



<script>
 
 async function fetchAndPopulateTable() {
      try {
        const response = await axios.get('http://localhost:4000/users');
        const data = response.data;
        updateTable(data);
     // Add an event listener to the search input field
    document.getElementById("searchInput").addEventListener('keyup', function () {
      const input = document.getElementById('searchInput');
      const searchTerm = input.value.toLowerCase();
      console.log(searchTerm)
      const filteredData = data.filter(item => {
        return item.username.toLowerCase().includes(searchTerm) || item.email.toLowerCase().includes(searchTerm);
      });
      updateTable(filteredData);
    });
  }   catch (error) {
        console.error('Error fetching data:', error);
      }
    }

    // Function to update the table with filtered data
    function updateTable(filteredData) {
      const tbody = document.querySelector('#no-more-tables tbody');
      tbody.innerHTML = '';

      let counter = 1;
      filteredData.forEach(item => {
        const tr = document.createElement('tr');
        tr.innerHTML = `<td>${counter}</td>` +
          `<td style="text-align-last: center;">${item.username}</td>` +
          `<td style="text-align-last: center;">${item.email}</td>` +
          '<td style="text-align-last: center;">' +
          `<button class="btn btn-success" onclick="editUser('${item._id}')"><i class="fa fa-edit"></i></button>` +
          `<button class="btn btn-danger" onclick="deleteUser('${item._id}')"><i class="fa fa-trash mr-5"></i></button>` +
          '</td>';
        tbody.appendChild(tr);
        counter++;
      });
    }

    // Function to delete the user
async function deleteUser(userId) {
  console.log("Deleting user with ID:", userId);
  try {
    await axios.delete(`http://localhost:4000/users/${userId}`);
    console.log('User deleted successfully.');
    fetchAndPopulateTable(); 
  } catch (error) {
    console.error('Error deleting user:', error);
  }
}

let currentUserId;

// Function to edit thee user
function editUser(userId) {
  console.log('Editing user with ID:', userId);
  currentUserId = userId;
document.getElementById('editOverlay').style.display = 'flex';
axios.get(`http://localhost:4000/users/${userId}`)
    .then(userData => {
      // saveEdit(userData.data);
      // console.log(userData);
      document.getElementById('newUsername').value = userData.data.username;
      document.getElementById('newEmail').value = userData.data.email;
      document.getElementById('newPassword').value = userData.data.password;
    });
}

// async function saveEdit(data) {
  async function saveEdit() {
  // console.log(data)
  console.log(currentUserId)
  const newUsername = document.getElementById('newUsername').value;
  const newEmail = document.getElementById('newEmail').value;
  const newPassword = document.getElementById('newPassword').value;

  const updatedUserData = {
    username: newUsername,
    email: newEmail,
    password: newPassword
  };
  console.log(updatedUserData)
  try {
    await axios.put(`http://localhost:4000/users/update/${currentUserId}`, updatedUserData);
    console.log('User updated successfully.');
    fetchAndPopulateTable();
    document.getElementById('editOverlay').style.display = 'none';
  } catch (error) {
    console.error('Error updating user:', error);
  }
}

function cancelEdit() {
      document.getElementById('editOverlay').style.display = 'none';
    }


  fetchAndPopulateTable();


      </script>