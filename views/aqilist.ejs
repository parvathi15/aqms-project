<!DOCTYPE html>
<html lang="en">

<head>
  <link href="styles.css" rel="stylesheet">
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css">
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-EVSTQN3/azprG1Anm3QDgpJLIm9Nao0Yz1ztcQTwFspd3yD65VohhpuuCOmLASjC" crossorigin="anonymous">
  <title>Air quality management Data</title>
</head>

<body>

    <div class="purple-overlay1">
        <div class="quote container centered">
            <h4>Air quality management Data</h4>
        </div>
      </div>

      <div class="container mt-1">
        <form method="POST" action="#" class="mt-1">
         <div class="row mt-3">
         <div class="col-md-10 mt-3">
          <input class="form-control " name="search" id = "searchInput" type="text" style="height:54px;" placeholder="Search for City"><i class="fa fa-search form-control-feedback" style="position: absolute;
     position: absolute;
    top: 27%;
    right: 25%;
    transform: translateY(-50%);
    font-size: 22px;
    color: #ccc;"></i>
     </div>
   
   </div></form>
   
 
    <div class="row mt-5">
      <div id="no-more-tables">
        <table class="table">
          <thead class="cf">
            <tr>
              <th style="text-align-last:left;">#</th>
              <th style="text-align-last: center;">City</th>
              <th style="text-align-last: center;">AQI</th>
              <th style="text-align-last: center;">Status</th>
              <th style="text-align-last: center;">PM2.5</th>
              <th style="text-align-last: center;">Actions</th>
            </tr>
          </thead>
          <tbody>
          </tbody>
        </table>
      </div>
    </div>
  </div>

  <div class="overlay" id="editOverlay">
    <div class="popup" id="editPopup">
     
      <label for="newCity">City:</label>
      <div class="form-group">
       <input type="text"  class="form-control" id="newCity" required>
       </div>
 
     <label for="newAQI">AQI:</label>
     <div class="form-group">
       <input type="text"  class="form-control" id="newAQI" required>
     </div>

     <label for="newStatus">Status:</label>
     <div class="form-group">
       <input type="text"  class="form-control" id="newStatus" required>
     </div>
 
     <label for="newPM25">PM 2.5:</label>
     <div class="form-group">
       <input type="text"  class="form-control" id="newPM25" required>
     </div>
      <button onclick="saveEdit()" class = "btn btn-save mt-4 mb-2">Save</button>
      <button onclick="cancelEdit()" class = "btn btn-danger mt-4 mb-2">Cancel</button>
    </div>
  </div>

 



<script>
 
  
 async function fetchAndPopulateTable() {
  try {
        const response = await axios.get('http://localhost:4000/aqiData');
        const data = response.data;
        updateTable(data);
     // Add an event listener to the search input field
    document.getElementById("searchInput").addEventListener('keyup', function () {
      const input = document.getElementById('searchInput');
      const searchTerm = input.value.toLowerCase();
      console.log(searchTerm)
      const filteredData = data.filter(item => {
        return item.city.toLowerCase().includes(searchTerm) || item.status.toLowerCase().includes(searchTerm);
      });
      updateTable(filteredData);
    });
  }   catch (error) {
        console.error('Error fetching data:', error);
      }
    }

    // Function to update the table with filtered data
    function updateTable(filteredData) {
      const tbody = document.querySelector('#no-more-tables tbody');
      tbody.innerHTML = '';

      let counter = 1;
      filteredData.forEach(item => {
        const tr = document.createElement('tr');
        tr.innerHTML = `<td>${counter}</td>` +
      `<td style="text-align-last: center;">${item.city}</td>` +
        `<td style="text-align-last: center;">${item.aqi}</td>` +
        `<td style="text-align-last: center;">${item.status}</td>` +
        `<td style="text-align-last: center;">${item.pm25}</td>` +
        '<td style="text-align-last: center;">' +
        `<button class="btn btn-success" onclick="editData('${item._id}')"><i class="fa fa-edit"></i></button>` +
        `<button class="btn btn-danger" onclick="deleteData('${item._id}')"><i class="fa fa-trash mr-5"></i></button>` +
        '</td>';
      tbody.appendChild(tr);
      counter++;
      });
    }

    // Function to delete the data
async function deleteData(userId) {
  console.log("Deleting user with ID:", userId);
  try {
    await axios.delete(`http://localhost:4000/aqiData/${userId}`);
    console.log('Data deleted successfully.');
    fetchAndPopulateTable(); 
  } catch (error) {
    console.error('Error deleting Data:', error);
  }
}

let currentUserId;

// Function to edit the data
function editData(userId) {
  console.log('Editing data with ID:', userId);
  currentUserId = userId;
document.getElementById('editOverlay').style.display = 'flex';
axios.get(`http://localhost:4000/aqiData/${userId}`)
    .then(userData => {
      // console.log(userData.data);
      // saveEdit(userData.data);
      document.getElementById('newCity').value = userData.data.city;
      document.getElementById('newAQI').value = userData.data.aqi;
      document.getElementById('newStatus').value = userData.data.status;
      document.getElementById('newPM25').value = userData.data.pm25;
    });
}

async function saveEdit() {
  console.log(currentUserId)

  const newCity = document.getElementById('newCity').value;
  const newAQI = document.getElementById('newAQI').value;
  const newStatus = document.getElementById('newStatus').value;
  const newPM25 = document.getElementById('newPM25').value;

  const updatedAqiData = {
    city: newCity,
    aqi: newAQI,
    status: newStatus,
    pm25: newPM25
  };

  try {
    const response = await axios.put(`http://localhost:4000/aqiData/update/${currentUserId}`, updatedAqiData);

    console.log('Data updated successfully:', response.data);
    fetchAndPopulateTable();
  } catch (error) {
    console.error('Error updating Data:', error);
  }
}


function cancelEdit() {
      document.getElementById('editOverlay').style.display = 'none';
    }

  fetchAndPopulateTable();


      </script>